name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            if (pr.additions + pr.deletions > 500) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: '‚ö†Ô∏è This PR contains ' + (pr.additions + pr.deletions) + ' changes. Consider breaking it into smaller PRs for easier review.'
              });
            }

  preview-deploy:
    name: Preview Deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const previewUrl = `https://deploy-preview-${prNumber}--finflow-tracker-fern.netlify.app`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `üîç **Preview Deployment**\n\nOnce the Netlify build completes, you can preview this PR at:\n${previewUrl}\n\nCheck build status at: https://app.netlify.com/sites/finflow-tracker-fern/deploys`
            });

  database-migration-check:
    name: Database Migration Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for schema changes
        run: |
          if git diff origin/main...HEAD --name-only | grep -q "prisma/schema.prisma"; then
            echo "‚ö†Ô∏è Database schema changes detected"
            echo "SCHEMA_CHANGED=true" >> $GITHUB_ENV
          else
            echo "‚úÖ No database schema changes"
            echo "SCHEMA_CHANGED=false" >> $GITHUB_ENV
          fi
      
      - name: Comment if schema changed
        if: env.SCHEMA_CHANGED == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'üóÑÔ∏è **Database Schema Changes Detected**\n\nThis PR includes changes to the database schema. Please ensure:\n1. Migrations are backwards compatible\n2. A rollback plan is documented\n3. The staging environment has been tested'
            });
